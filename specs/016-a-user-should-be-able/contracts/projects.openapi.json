{
  "openapi": "3.0.3",
  "info": {
    "title": "CTRL FreaQ Project Lifecycle API",
    "version": "0.1.0",
    "description": "Contracts covering project creation, retrieval, update, archive, and restore operations for the Project Lifecycle Management feature."
  },
  "servers": [
    {
      "url": "http://localhost:5001/api/v1",
      "description": "Local development"
    }
  ],
  "components": {
    "parameters": {
      "ProjectIdPathParam": {
        "name": "projectId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Identifier of the project."
      },
      "IncludeArchivedQuery": {
        "name": "includeArchived",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "description": "When true, include archived projects in the response."
      },
      "LimitQuery": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "OffsetQuery": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      },
      "IfUnmodifiedSince": {
        "name": "If-Unmodified-Since",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "description": "Timestamp (ISO 8601) corresponding to the last known project update; used for optimistic concurrency."
      }
    },
    "schemas": {
      "Project": {
        "type": "object",
        "required": [
          "id",
          "ownerUserId",
          "name",
          "slug",
          "visibility",
          "status",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ownerUserId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "slug": {
            "type": "string",
            "pattern": "^[a-z0-9-]+$",
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "workspace"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "active",
              "paused",
              "completed",
              "archived"
            ]
          },
          "goalTargetDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "goalSummary": {
            "type": "string",
            "maxLength": 280,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ProjectListItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Project"
          }
        ],
        "properties": {
          "memberAvatars": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "imageUrl": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "documentsCount": {
            "type": "integer",
            "minimum": 0,
            "nullable": true
          }
        }
      },
      "ProjectCreateRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "nullable": true,
            "description": "Optional short description; null or omission leaves it unset."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "workspace"
            ],
            "default": "workspace",
            "description": "Optional on create; defaults to workspace when omitted."
          },
          "goalTargetDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Optional ISO date (YYYY-MM-DD); omit or null to skip."
          },
          "goalSummary": {
            "type": "string",
            "maxLength": 280,
            "nullable": true,
            "description": "Optional short text describing the next milestone."
          }
        }
      },
      "ProjectUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "workspace"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "active",
              "paused",
              "completed"
            ]
          },
          "goalTargetDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "goalSummary": {
            "type": "string",
            "maxLength": 280,
            "nullable": true
          }
        },
        "description": "At least one field must be provided. `status` excludes `archived` because archive uses DELETE."
      },
      "ProjectListResponse": {
        "type": "object",
        "required": [
          "projects",
          "total",
          "limit",
          "offset"
        ],
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectListItem"
            }
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1
          },
          "offset": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "ProjectListEmpty": {
        "type": "object",
        "required": [
          "projects",
          "total",
          "limit",
          "offset"
        ],
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1
          },
          "offset": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error",
          "message",
          "requestId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    }
  },
  "paths": {
    "/projects": {
      "get": {
        "summary": "List projects for current user",
        "operationId": "listProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitQuery"
          },
          {
            "$ref": "#/components/parameters/OffsetQuery"
          },
          {
            "$ref": "#/components/parameters/IncludeArchivedQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "operationId": "createProject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "headers": {
              "Last-Modified": {
                "description": "Timestamp of the created resource",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Name or slug conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "summary": "Get project by ID",
        "operationId": "getProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update project metadata",
        "operationId": "updateProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectIdPathParam"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (no manage permission)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Version conflict or slug/name collision",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Archive (soft-delete) a project",
        "operationId": "archiveProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectIdPathParam"
          }
        ],
        "responses": {
          "204": {
            "description": "Project archived"
          },
          "404": {
            "description": "Project not found or already archived",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/restore": {
      "post": {
        "summary": "Restore an archived project",
        "operationId": "restoreProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Project restored",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "409": {
            "description": "Project not in archived state",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
